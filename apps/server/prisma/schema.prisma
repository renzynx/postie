generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sql"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String?   @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  verified  DateTime? @map("verified_at")

  posts   Post[]
  votes   Vote[]
  profile Profile?

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int    @map("author_id")
  votes    Vote[]

  @@map("posts")
}

model Vote {
  id        String   @id @default(uuid())
  value     Int      @default(1) // 1 or -1 for like or dislike
  createdAt DateTime @default(now()) @map("created_at")

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String @map("post_id")

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @map("user_id")

  @@unique([postId, userId])
  @@map("votes")
}

model Profile {
  id  Int     @id @default(autoincrement())
  bio String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique @map("user_id")

  @@map("profiles")
}
